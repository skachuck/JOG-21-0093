amr.plot_prefix = plot.amery.0.6flux.iter1.
amr.check_prefix = chk.amery.0.6flux.iter1.
amr.plot_interval = 10
main.maxStep = 3000000   # maximum number of steps to run
amr.check_interval = 10

###### BED GEOMETRY ######
geometry.problem_type = marineIceSheet
marineIceSheet.geometry = confinedTongue
marineIceSheet.bedSlope = 0 0

###### ICE GEOMETRY ######
marineIceSheet.thickness_type = compactSupportTongue

###### BED GEOMETRY ######
geometry.problem_type = IceTongue
iceTongue.bedSlope = 0 0
iceTongue.originElevation = -855
iceTongue.wallWidth = 5e3
iceTongue.wallElevation = 10e3

###### ICE GEOMETRY ######
# Initialize with 1D analytic profiles
iceTongue.geometry = confinedTongue
iceTongue.thickness_type = compactSupportTongue
confinedTongue.glthk = 1090.0   # Grounding line thickness
confinedTongue.glvel = 390.0   # Grounding line velocity
confinedTongue.A = 1.29e-17   # Ice softness
# note that compactSupport classes spill over the domain
# boundaries where appropriate
iceTongue.loBound = -5e3 5e3 
iceTongue.hiBound =  500e3 105e3
iceTongue.velBCFuncLo = 3 2 0 
iceTongue.velBCFuncHi = 1 2 0  


# No slip boundary
geometry.beta_type = constantBeta
geometry.betaValue = 0.0
geometry.basalSlope = 0 0 0 
# No slip boundary - could also turn off periodicity....
amr.wallDrag = true
amr.wallDragExtra = 1e8
amr.reset_floating_friction = 0


###### MASS BALANCE ######
surfaceFlux.type = zeroFlux
basalFlux.type = constantFlux
basalFlux.flux_value = -0.6

###### AMR-RUNTIME PARAMETERS ######
main.poutBaseName = pout.amery.0.6flux
main.maxTime = 1200  # maximum time to run to
main.domain_size = 550e3 110e3 0  # full-domain
amr.num_cells = 640 128 1   #number of cells in base grid for half-domain

###### ICE RHEOLOGY ######
main.constitutiveRelation = L1L2
main.rateFactor = constRate
constRate.A = 1.29e-17


###### DAMAGE PARAMETERS ######
amr.evolve_damage = 1
amr.incorporate_damage = 0
muCoefficient.type = unit
damage.type = Nye
damage.advect = 1   # 0 = off, 1 = on (default)
#damage.manufactured = 0   # 0 = off (default), 1 = on
damage.source_type = physical
#amr.fix_partialcell_damage = 1

###### CALVING PARAMETERS ######
# A fixed calving front - any icce less than the specified thickness is removed

CalvingModel.type = CompositeCalvingModel
CalvingModel.nElements = 2
CalvingModel.element1.type = FixedFrontCalvingModel
CalvingModel.element1.min_thickness = 1.0

CalvingModel.element0.type = DomainEdgeCalvingModel
CalvingModel.element0.front_lo = 0 0 # for half-domain
CalvingModel.element0.front_hi = 1 0

###### AMR WRITE PARAMETERS ######

amr.mask_sources = 1 # scale source terms by real-valued ice mask
amr.write_mask = 1
amr.write_thickness_sources = 1
amr.write_damage = 1
amr.write_nye_damage = 1
amr.write_solver_rhs = 1
amr.write_mask = 1
amr.write_temperature = 1
amr.check_overwrite = false
amr.verbosity = 5



####### AMR AMR PARAMETERS ######


amr.maxLevel = 0   # finest level allowed in simulation
amr.ref_ratio = 2 2 2

amr.is_periodic = 0 0 1    # 1 if domain is periodic 
# (note that periodic BC's override physical BC types)
# velocity BC types:  0 = homogeneous Dirichlet
#                     1 = homogeneous Neumann
#                     2 = free-slip (Dirichlet-normal, Neumann-tangential)
bc.lo_bc = 3 2 0   # Dirichlet is required in x for constant input velocity
bc.hi_bc = 1 2 0  
bc.new_bc = 1   # 0 for old, 1 for new

amr.temporal_accuracy = 1

amr.cfl = 0.1  # "cfl" number
amr.initial_cfl = 0.1  # "cfl" number
amr.max_dt_grow_factor = 1.1 #max amount dt can grow from one timestep to another
#initial guess 
amr.do_initial_velocity_guess = 1
amr.do_initial_velocity_solve = 1
amr.initial_velocity_guess_type = 1 # linear PDE
amr.initial_velocity_guess_solver_type = 1 # use JFNK solver's linear mode

amr.regrid_interval = 10   # number of timesteps between regridding
amr.blockFactor = 4           # block factor used in grid generation
amr.fill_ratio = 0.8          # how efficient are the grids
amr.nestingRadius = 3         # proper nesting radius required
amr.tags_grow = 2             # amount to buffer tags
amr.max_box_size = 32         # largest box length allowed
#amr.max_box_size = 64         # largest box length allowed
amr.max_box_size = 256         # largest box length allowed

amr.tag_on_grad_velocity = 0
amr.tag_on_laplacian_velocity = 1
amr.lap_vel_tagging_val = 1
amr.tag_on_strain_rate_invariant = 0
amr.strain_rate_invariant_tagging_val = 1

amr.tag_on_damage = 1
amr.damage_tagging_val = 0.1

amr.velocity_solver_tolerance = 1.0e-10

###### SOLVER PARAMETERS ######
#velocity solve type -- 0 = Picard, 1 = JFNK
amr.velocity_solver_type = 1

picardSolver.num_smooth = 8
picardSolver.linearSolver = BiCGStab

JFNKSolver.vtopSafety = 0.9
JFNKSolver.minPicardIterations = 2
JFNKSolver.switchRate = 5.0
JFNKSolver.numMGSmooth = 8
#JFNKSolver.maxIter = 100
JFNKSolver.maxIter = 20

JFNKSolver.absTol = 1.0e-5
JFNKSolver.relTol = 1.0e-10
JFNKSolver.BiCGStabRelTol = 1.0e-5
JFNKSolver.maxBiCGStabIter = 10
JFNKSolver.maxBiCGStabIter = 40
JFNKSolver.normType = 0
JFNKSolver.verbosity = 5
JFNKSolver.vtopRelaxMinIter = 4
JFNKSolver.vtopRelaxTol = 0
JFNKSolver.numMGIter = 1
JFNKSolver.h = 0.025
JFNKSolver.hAdaptive = true 
JFNKSolver.mgProlongType = 1

# 0 = relax, 1 = BiCGStab, 2 = GMRES, 3 = MultiGrid, 4 = PETSc
JFNKSolver.solverType = 4
JFNKSolver.maxBiCGStabIter = 50
JFNKSolver.MGtol = 1.0e-5
JFNKSolver.RelaxTol = 1.0e-5
JFNKSolver.maxRelaxIter = 50
JFNKSolver.vtopRelaxTol = 0
#JFNKSolver.eliminateFastIce = true
#JFNKSolver.eliminateFastIceSpeed = 8.0e+4



# BISICLES REVISION: 3993:4042M

